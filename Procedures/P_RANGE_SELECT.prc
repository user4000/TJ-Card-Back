/* GRANT EXECUTE ON P_RANGE_SELECT TO CARD_BACK_ROLE */
CREATE OR REPLACE PROCEDURE P_RANGE_SELECT ( I_ID_SESSION IN VARCHAR2,  ICC_MIN IN INTEGER, ICC_MAX IN INTEGER,  O_CODE  OUT  INTEGER,  O_MESSAGE OUT VARCHAR2)
IS
/* 
Запишем один диапазон в таблицу TB_RANGE 
Если ICC_MIN=0 и ICC_MAX=0 то это означает, что нужно удалить все данные из TB_RANGE по указанному I_ID_SESSION
*/
X_CODE INTEGER; 
X_MESSAGE VARCHAR2(4000);

I_CODE_SESSION INTEGER;
I_DATE DATE;

BEGIN

O_CODE := 0; O_MESSAGE := '';


IF (ICC_MIN=0) AND (ICC_MAX=0) THEN
    DELETE FROM TB_RANGE WHERE CODE_SESSION = (SELECT CODE_SESSION FROM TB_SESSION WHERE ID_SESSION =  I_ID_SESSION) ;
    COMMIT;
    RETURN;
END IF;


SELECT COUNT(*) INTO X_CODE FROM TB_SESSION WHERE ID_SESSION =  I_ID_SESSION;

IF X_CODE = 0 THEN
    
    O_CODE := 81002;
    O_MESSAGE := 'Идентификатор вашей сессии не найден! Работа программы прервана!';
    P_APPLICATION_LOG(2001, O_CODE, O_MESSAGE,  X_CODE, X_MESSAGE);
    RETURN;
    
END IF;



SELECT LOGON_DATE INTO I_DATE FROM TB_SESSION WHERE ID_SESSION =  I_ID_SESSION;

IF I_DATE < TRUNC(sysdate) THEN
    
    O_CODE := 81003;
    O_MESSAGE := 'Дата вашей сессии истекла! Выйдите из программы и зайдите снова.';
    P_APPLICATION_LOG(2001, O_CODE, O_MESSAGE,  X_CODE, X_MESSAGE);
    RETURN;
    
END IF;




SELECT CODE_SESSION INTO I_CODE_SESSION FROM TB_SESSION WHERE ID_SESSION =  I_ID_SESSION AND LOGON_DATE >= TRUNC(sysdate);

INSERT INTO TB_RANGE (CODE_SESSION, RANGE_MIN, RANGE_MAX) VALUES (I_CODE_SESSION, ICC_MIN, ICC_MAX);

COMMIT;




EXCEPTION 
        WHEN OTHERS THEN
                 ROLLBACK;
                 O_CODE := 81001;
                 O_MESSAGE := '';
     
END;