CREATE OR REPLACE PROCEDURE P_APPLICATION_LOG
 ( 
 ID_USER_ACTION IN INTEGER,
 I_CODE IN INTEGER,
 I_NOTE  IN VARCHAR2,
 O_CODE  OUT  INTEGER,
 O_MESSAGE OUT VARCHAR2
 ) IS 
 
/*
Запишем данное событие в журнал T_APPLICATION_LOG
*/
 
PRAGMA AUTONOMOUS_TRANSACTION; ---- Делаем данную транзакцию независимой от главной транзакции.

X_ID_USER INTEGER; V_NOTE VARCHAR2(2000); V_ID_USER_ACTION INTEGER; V_SESSION VARCHAR2(200);

BEGIN

X_ID_USER := F_GET_CURRENT_USER_ID ;
V_ID_USER_ACTION := ID_USER_ACTION;
V_NOTE := I_NOTE;
V_SESSION := F_GET_CURRENT_SESSION_INFO;

INSERT INTO T_APPLICATION_LOG (ID_USER, ID_USER_ACTION, SESSION_INFO, CODE, NOTE) 
VALUES (X_ID_USER, V_ID_USER_ACTION, V_SESSION, I_CODE, V_NOTE); 

COMMIT;

EXCEPTION 

        WHEN OTHERS THEN
      
             ROLLBACK;   
             O_CODE := 1;
             O_MESSAGE := SUBSTR(SQLCODE || ' ' || SQLERRM, 1, 4000);

         

END;
